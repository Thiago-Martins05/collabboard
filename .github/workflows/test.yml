name: Testes

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: collabboard_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/collabboard_test" >> $GITHUB_ENV
          echo "NEXTAUTH_SECRET=test-secret" >> $GITHUB_ENV
          echo "NEXTAUTH_URL=http://localhost:3000" >> $GITHUB_ENV
          echo "GITHUB_ID=test-github-id" >> $GITHUB_ENV
          echo "GITHUB_SECRET=test-github-secret" >> $GITHUB_ENV
          echo "RESEND_API_KEY=test-resend-key" >> $GITHUB_ENV
          echo "STRIPE_SECRET_KEY=test-stripe-key" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=test-stripe-publishable-key" >> $GITHUB_ENV
          echo "STRIPE_WEBHOOK_SECRET=test-webhook-secret" >> $GITHUB_ENV
          echo "STRIPE_PRO_PRICE_ID=test-price-id" >> $GITHUB_ENV
          echo "PUSHER_APP_ID=test-pusher-app-id" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_PUSHER_KEY=test-pusher-key" >> $GITHUB_ENV
          echo "PUSHER_SECRET=test-pusher-secret" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_PUSHER_CLUSTER=test-cluster" >> $GITHUB_ENV
          echo "SENTRY_DSN=test-sentry-dsn" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SENTRY_DSN=test-sentry-dsn" >> $GITHUB_ENV

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm run test:run

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  e2e:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: collabboard_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup environment variables
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/collabboard_test" >> $GITHUB_ENV
          echo "NEXTAUTH_SECRET=test-secret" >> $GITHUB_ENV
          echo "NEXTAUTH_URL=http://localhost:3000" >> $GITHUB_ENV
          echo "GITHUB_ID=test-github-id" >> $GITHUB_ENV
          echo "GITHUB_SECRET=test-github-secret" >> $GITHUB_ENV
          echo "RESEND_API_KEY=test-resend-key" >> $GITHUB_ENV
          echo "STRIPE_SECRET_KEY=test-stripe-key" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=test-stripe-publishable-key" >> $GITHUB_ENV
          echo "STRIPE_WEBHOOK_SECRET=test-webhook-secret" >> $GITHUB_ENV
          echo "STRIPE_PRO_PRICE_ID=test-price-id" >> $GITHUB_ENV
          echo "PUSHER_APP_ID=test-pusher-app-id" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_PUSHER_KEY=test-pusher-key" >> $GITHUB_ENV
          echo "PUSHER_SECRET=test-pusher-secret" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_PUSHER_CLUSTER=test-cluster" >> $GITHUB_ENV
          echo "SENTRY_DSN=test-sentry-dsn" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SENTRY_DSN=test-sentry-dsn" >> $GITHUB_ENV

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npm run e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: [test, e2e]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          GITHUB_ID: ${{ secrets.GITHUB_ID }}
          GITHUB_SECRET: ${{ secrets.GITHUB_SECRET }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          STRIPE_PRO_PRICE_ID: ${{ secrets.STRIPE_PRO_PRICE_ID }}
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          NEXT_PUBLIC_PUSHER_KEY: ${{ secrets.NEXT_PUBLIC_PUSHER_KEY }}
          PUSHER_SECRET: ${{ secrets.PUSHER_SECRET }}
          NEXT_PUBLIC_PUSHER_CLUSTER: ${{ secrets.NEXT_PUBLIC_PUSHER_CLUSTER }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}

